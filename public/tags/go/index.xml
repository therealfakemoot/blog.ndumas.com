<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on code and stuff</title>
    <link>/tags/go/</link>
    <description>Recent content in go on code and stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Nicholas Dumas 2020</copyright>
    <lastBuildDate>Mon, 08 Jul 2019 10:45:07 -0400</lastBuildDate>
    
	<atom:link href="/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Interfaces</title>
      <link>/posts/data-interfaces/</link>
      <pubDate>Wed, 06 Feb 2019 14:58:22 +0000</pubDate>
      
      <guid>/posts/data-interfaces/</guid>
      <description>interfaces I&amp;rsquo;m a fan of Go&amp;rsquo;s interfaces. They&amp;rsquo;re really simple and don&amp;rsquo;t require a lot of legwork.
1 2 3 4 5 6 7 8 9 10 11  type Mover interface { func Move(x, y int) (int, int) } type Dog struct { Name string } func (d Dog) Move(x, y int) (int, int) { return x, y }   Dog is now a Mover! No need for keywords like implements.</description>
    </item>
    
  </channel>
</rss>